name: Java CI with Gradle

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: testdb
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpass
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 10

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      # ✅ 테스트 프로파일 + Postgres + JWT 시크릿
      - name: Use test profile + override datasource to Postgres
        run: |
          echo "SPRING_DATASOURCE_URL=jdbc:postgresql://localhost:5432/testdb" >> $GITHUB_ENV
          echo "SPRING_DATASOURCE_USERNAME=testuser" >> $GITHUB_ENV
          echo "SPRING_DATASOURCE_PASSWORD=testpass" >> $GITHUB_ENV
          echo "SPRING_DATASOURCE_DRIVER=org.postgresql.Driver" >> $GITHUB_ENV
          echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> $GITHUB_ENV

      - name: Build & Test
        run: ./gradlew clean test -Dspring.profiles.active=test

      # ✅ 테스트 리포트 업로드 스텝 (요거 추가!)
      - name: Upload test report
        if: always()  # 테스트 실패해도 실행
        uses: actions/upload-artifact@v4
        with:
          name: test-report
          path: build/reports/tests/test

