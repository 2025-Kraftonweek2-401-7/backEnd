name: Java CI with Gradle

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: testdb
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpass
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 10

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Write test profile config
        run: |
          mkdir -p src/test/resources
          echo "spring:" > src/test/resources/application-test.yml
          echo "  datasource:" >> src/test/resources/application-test.yml
          echo "    url: jdbc:postgresql://localhost:5432/testdb" >> src/test/resources/application-test.yml
          echo "    username: testuser" >> src/test/resources/application-test.yml
          echo "    password: testpass" >> src/test/resources/application-test.yml
          echo "    driver-class-name: org.postgresql.Driver" >> src/test/resources/application-test.yml
          echo "  jpa:" >> src/test/resources/application-test.yml
          echo "    database-platform: org.hibernate.dialect.PostgreSQLDialect" >> src/test/resources/application-test.yml
          echo "    hibernate:" >> src/test/resources/application-test.yml
          echo "      ddl-auto: create-drop" >> src/test/resources/application-test.yml
          echo "  jwt:" >> src/test/resources/application-test.yml
          echo "    secret: ${{ secrets.JWT_SECRET }}" >> src/test/resources/application-test.yml

      - name: Build & Test
        run: ./gradlew clean test -Dspring.profiles.active=test

      - name: Upload test report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-report
          path: build/reports/tests/test
